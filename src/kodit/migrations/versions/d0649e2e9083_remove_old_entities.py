# ruff: noqa
"""remove_old_entities

Revision ID: d0649e2e9083
Revises: 5d3d21b2753f
Create Date: 2025-09-16 14:46:25.011128

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d0649e2e9083"
down_revision: Union[str, None] = "5d3d21b2753f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Drop dependent tables first to respect foreign key constraints in PostgreSQL
    op.drop_index(
        "ix_author_file_mappings_author_id", table_name="author_file_mappings"
    )
    op.drop_index("ix_author_file_mappings_file_id", table_name="author_file_mappings")
    op.drop_table("author_file_mappings")

    # Now safe to drop referenced tables
    op.drop_index("ix_authors_email", table_name="authors")
    op.drop_index("ix_authors_name", table_name="authors")
    op.drop_table("authors")

    # Drop embeddings before snippets (embeddings references snippets)
    op.drop_index(op.f("ix_embeddings_type"), table_name="embeddings")
    op.drop_index(op.f("ix_embeddings_snippet_id"), table_name="embeddings")
    op.drop_table("embeddings")

    # Drop snippets before files (snippets references files)
    op.drop_index("ix_snippets_file_id", table_name="snippets")
    op.drop_index("ix_snippets_index_id", table_name="snippets")
    op.drop_table("snippets")

    # Drop indexes before sources (indexes references sources)
    op.drop_index("ix_indexes_source_id", table_name="indexes")
    op.drop_table("indexes")

    # Drop files before sources (files references sources)
    op.drop_index("ix_files_cloned_path", table_name="files")
    op.drop_index("ix_files_extension", table_name="files")
    op.drop_index("ix_files_mime_type", table_name="files")
    op.drop_index("ix_files_sha256", table_name="files")
    op.drop_index("ix_files_uri", table_name="files")
    op.drop_table("files")

    # Finally drop sources
    op.drop_index("ix_sources_cloned_path", table_name="sources")
    op.drop_index("ix_sources_type", table_name="sources")
    op.drop_index("ix_sources_uri", table_name="sources")
    op.drop_table("sources")

    # Recreate embeddings table with String snippet_id for snippets_v2 compatibility
    op.create_table(
        "embeddings",
        sa.Column("snippet_id", sa.String(length=64), nullable=False),
        sa.Column(
            "type", sa.Enum("CODE", "TEXT", name="embeddingtype"), nullable=False
        ),
        sa.Column("embedding", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["snippet_id"],
            ["snippets_v2.sha"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_embeddings_snippet_id"), "embeddings", ["snippet_id"], unique=False
    )
    op.create_index(op.f("ix_embeddings_type"), "embeddings", ["type"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop and recreate embeddings table with original snippet_id type
    op.drop_index(op.f("ix_embeddings_type"), table_name="embeddings")
    op.drop_index(op.f("ix_embeddings_snippet_id"), table_name="embeddings")
    op.drop_table("embeddings")

    # Recreate embeddings table with Integer snippet_id for original snippets compatibility
    op.create_table(
        "embeddings",
        sa.Column("snippet_id", sa.Integer(), nullable=False),
        sa.Column(
            "type", sa.Enum("CODE", "TEXT", name="embeddingtype"), nullable=False
        ),
        sa.Column("embedding", sa.JSON(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["snippet_id"],
            ["snippets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_embeddings_snippet_id"), "embeddings", ["snippet_id"], unique=False
    )
    op.create_index(op.f("ix_embeddings_type"), "embeddings", ["type"], unique=False)
    op.create_table(
        "indexes",
        sa.Column("source_id", sa.INTEGER(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_indexes_source_id", "indexes", ["source_id"], unique=True)
    op.create_table(
        "author_file_mappings",
        sa.Column("author_id", sa.INTEGER(), nullable=False),
        sa.Column("file_id", sa.INTEGER(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["authors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("author_id", "file_id", name="uix_author_file_mapping"),
    )
    op.create_index(
        "ix_author_file_mappings_file_id",
        "author_file_mappings",
        ["file_id"],
        unique=False,
    )
    op.create_index(
        "ix_author_file_mappings_author_id",
        "author_file_mappings",
        ["author_id"],
        unique=False,
    )
    op.create_table(
        "files",
        sa.Column("source_id", sa.INTEGER(), nullable=False),
        sa.Column("mime_type", sa.VARCHAR(length=255), nullable=False),
        sa.Column("uri", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("cloned_path", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("sha256", sa.VARCHAR(length=64), nullable=False),
        sa.Column("size_bytes", sa.INTEGER(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("extension", sa.VARCHAR(length=255), nullable=False),
        sa.Column("file_processing_status", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_files_uri", "files", ["uri"], unique=False)
    op.create_index("ix_files_sha256", "files", ["sha256"], unique=False)
    op.create_index("ix_files_mime_type", "files", ["mime_type"], unique=False)
    op.create_index("ix_files_extension", "files", ["extension"], unique=False)
    op.create_index("ix_files_cloned_path", "files", ["cloned_path"], unique=False)
    op.create_table(
        "snippets",
        sa.Column("file_id", sa.INTEGER(), nullable=False),
        sa.Column("index_id", sa.INTEGER(), nullable=False),
        sa.Column("content", sa.TEXT(), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("summary", sa.TEXT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.id"],
        ),
        sa.ForeignKeyConstraint(
            ["index_id"],
            ["indexes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_snippets_index_id", "snippets", ["index_id"], unique=False)
    op.create_index("ix_snippets_file_id", "snippets", ["file_id"], unique=False)
    op.create_table(
        "sources",
        sa.Column("uri", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("cloned_path", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("type", sa.VARCHAR(length=7), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_sources_uri", "sources", ["uri"], unique=True)
    op.create_index("ix_sources_type", "sources", ["type"], unique=False)
    op.create_index("ix_sources_cloned_path", "sources", ["cloned_path"], unique=False)
    op.create_table(
        "authors",
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), nullable=False),
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "email", name="uix_author"),
    )
    op.create_index("ix_authors_name", "authors", ["name"], unique=False)
    op.create_index("ix_authors_email", "authors", ["email"], unique=False)
    # ### end Alembic commands ###
