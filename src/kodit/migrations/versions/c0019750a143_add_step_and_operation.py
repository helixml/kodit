# ruff: noqa
"""add step and operation

Revision ID: c0019750a143
Revises: 9cf0e87de578
Create Date: 2025-09-02 11:02:39.260018

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c0019750a143'
down_revision: Union[str, None] = '9cf0e87de578'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('operations',
    sa.Column('index_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('progress_percentage', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['index_id'], ['indexes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_operations_index_id'), 'operations', ['index_id'], unique=False)
    op.create_index(op.f('ix_operations_state'), 'operations', ['state'], unique=False)
    op.create_index(op.f('ix_operations_type'), 'operations', ['type'], unique=False)
    op.create_table('steps',
    sa.Column('operation_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('state', sa.String(length=255), nullable=False),
    sa.Column('progress_percentage', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['operation_id'], ['operations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_steps_name'), 'steps', ['name'], unique=False)
    op.create_index(op.f('ix_steps_operation_id'), 'steps', ['operation_id'], unique=False)
    op.create_index(op.f('ix_steps_state'), 'steps', ['state'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_steps_state'), table_name='steps')
    op.drop_index(op.f('ix_steps_operation_id'), table_name='steps')
    op.drop_index(op.f('ix_steps_name'), table_name='steps')
    op.drop_table('steps')
    op.drop_index(op.f('ix_operations_type'), table_name='operations')
    op.drop_index(op.f('ix_operations_state'), table_name='operations')
    op.drop_index(op.f('ix_operations_index_id'), table_name='operations')
    op.drop_table('operations')
    # ### end Alembic commands ###
