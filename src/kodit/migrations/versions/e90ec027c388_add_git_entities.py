# ruff: noqa
"""add git entities

Revision ID: e90ec027c388
Revises: b9cd1c3fd762
Create Date: 2025-09-15 09:06:22.955040

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e90ec027c388"
down_revision: Union[str, None] = "b9cd1c3fd762"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "commit_indexes",
        sa.Column("commit_sha", sa.String(length=64), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "IN_PROGRESS", "COMPLETED", "FAILED", name="indexstatustype"
            ),
            nullable=False,
        ),
        sa.Column(
            "indexed_at",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
        sa.Column("error_message", sa.UnicodeText(), nullable=True),
        sa.Column("files_processed", sa.Integer(), nullable=False),
        sa.Column("processing_time_seconds", sa.String(length=50), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_commit_indexes_commit_sha"),
        "commit_indexes",
        ["commit_sha"],
        unique=True,
    )
    op.create_index(
        op.f("ix_commit_indexes_status"), "commit_indexes", ["status"], unique=False
    )
    op.create_table(
        "git_files",
        sa.Column("blob_sha", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("path", sa.String(length=1024), nullable=False),
        sa.Column("mime_type", sa.String(length=255), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("extension", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("blob_sha"),
    )
    op.create_index(
        op.f("ix_git_files_extension"), "git_files", ["extension"], unique=False
    )
    op.create_index(
        op.f("ix_git_files_mime_type"), "git_files", ["mime_type"], unique=False
    )
    op.create_index(op.f("ix_git_files_path"), "git_files", ["path"], unique=False)
    op.create_table(
        "git_repos",
        sa.Column("sanitized_remote_uri", sa.String(length=1024), nullable=False),
        sa.Column("remote_uri", sa.String(length=1024), nullable=False),
        sa.Column("cloned_path", sa.String(length=1024), nullable=False),
        sa.Column(
            "last_scanned_at",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
        sa.Column("total_unique_commits", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_git_repos_sanitized_remote_uri"),
        "git_repos",
        ["sanitized_remote_uri"],
        unique=True,
    )
    op.create_table(
        "snippets_v2",
        sa.Column("sha", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("content", sa.UnicodeText(), nullable=False),
        sa.Column("extension", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("sha"),
    )
    op.create_index(
        op.f("ix_snippets_v2_extension"), "snippets_v2", ["extension"], unique=False
    )
    op.create_table(
        "enrichments",
        sa.Column("snippet_sha", sa.String(length=64), nullable=False),
        sa.Column(
            "type",
            sa.Enum("UNKNOWN", "SUMMARIZATION", name="enrichmenttype"),
            nullable=False,
        ),
        sa.Column("content", sa.UnicodeText(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["snippet_sha"],
            ["snippets_v2.sha"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("snippet_sha", "type", name="uix_snippet_enrichment"),
    )
    op.create_index(
        op.f("ix_enrichments_snippet_sha"), "enrichments", ["snippet_sha"], unique=False
    )
    op.create_index(op.f("ix_enrichments_type"), "enrichments", ["type"], unique=False)
    op.create_table(
        "git_commits",
        sa.Column("commit_sha", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("repo_id", sa.Integer(), nullable=False),
        sa.Column(
            "date",
            sa.DateTime(timezone=True),
            nullable=False,
        ),
        sa.Column("message", sa.UnicodeText(), nullable=False),
        sa.Column("parent_commit_sha", sa.String(length=64), nullable=True),
        sa.Column("author", sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["repo_id"],
            ["git_repos.id"],
        ),
        sa.PrimaryKeyConstraint("commit_sha"),
    )
    op.create_index(
        op.f("ix_git_commits_author"), "git_commits", ["author"], unique=False
    )
    op.create_index(
        op.f("ix_git_commits_repo_id"), "git_commits", ["repo_id"], unique=False
    )
    op.create_table(
        "snippet_v2_files",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("snippet_sha", sa.String(length=64), nullable=False),
        sa.Column("file_blob_sha", sa.String(length=64), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_blob_sha"],
            ["git_files.blob_sha"],
        ),
        sa.ForeignKeyConstraint(
            ["snippet_sha"],
            ["snippets_v2.sha"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("snippet_sha", "file_blob_sha", name="uix_snippet_file"),
    )
    op.create_index(
        op.f("ix_snippet_v2_files_file_blob_sha"),
        "snippet_v2_files",
        ["file_blob_sha"],
        unique=False,
    )
    op.create_index(
        op.f("ix_snippet_v2_files_snippet_sha"),
        "snippet_v2_files",
        ["snippet_sha"],
        unique=False,
    )
    op.create_table(
        "git_branches",
        sa.Column("repo_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("head_commit_sha", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["head_commit_sha"],
            ["git_commits.commit_sha"],
        ),
        sa.ForeignKeyConstraint(
            ["repo_id"],
            ["git_repos.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("repo_id", "name", name="uix_repo_branch"),
    )
    op.create_index(
        op.f("ix_git_branches_name"), "git_branches", ["name"], unique=False
    )
    op.create_index(
        op.f("ix_git_branches_repo_id"), "git_branches", ["repo_id"], unique=False
    )
    op.create_table(
        "git_commit_files",
        sa.Column("commit_sha", sa.String(length=64), nullable=False),
        sa.Column("file_blob_sha", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["commit_sha"],
            ["git_commits.commit_sha"],
        ),
        sa.ForeignKeyConstraint(
            ["file_blob_sha"],
            ["git_files.blob_sha"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("commit_sha", "file_blob_sha", name="uix_commit_file"),
    )
    op.create_index(
        op.f("ix_git_commit_files_commit_sha"),
        "git_commit_files",
        ["commit_sha"],
        unique=False,
    )
    op.create_index(
        op.f("ix_git_commit_files_file_blob_sha"),
        "git_commit_files",
        ["file_blob_sha"],
        unique=False,
    )
    op.create_table(
        "git_tags",
        sa.Column("repo_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("target_commit_sha", sa.String(length=64), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["repo_id"],
            ["git_repos.id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_commit_sha"],
            ["git_commits.commit_sha"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("repo_id", "name", name="uix_repo_tag"),
    )
    op.create_index(op.f("ix_git_tags_name"), "git_tags", ["name"], unique=False)
    op.create_index(op.f("ix_git_tags_repo_id"), "git_tags", ["repo_id"], unique=False)
    op.create_index(
        op.f("ix_git_tags_target_commit_sha"),
        "git_tags",
        ["target_commit_sha"],
        unique=False,
    )
    # Clear all tasks first (SQLite doesn't support ALTER COLUMN)
    op.execute("DELETE FROM tasks")

    # Drop the index first (must be done before dropping the column)
    op.drop_index(op.f("ix_tasks_type"), table_name="tasks")

    # Drop the existing type column
    op.drop_column("tasks", "type")

    # Recreate the type column with new length
    op.add_column("tasks", sa.Column("type", sa.String(length=50), nullable=False))

    # Recreate the index
    op.create_index(op.f("ix_tasks_type"), "tasks", ["type"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Clear all tasks first (SQLite doesn't support ALTER COLUMN)
    op.execute("DELETE FROM tasks")

    # Drop the index first
    op.drop_index(op.f("ix_tasks_type"), table_name="tasks")

    # Drop the existing type column
    op.drop_column("tasks", "type")

    # Recreate the type column with original length
    op.add_column("tasks", sa.Column("type", sa.VARCHAR(length=12), nullable=False))

    # Recreate the index
    op.create_index(op.f("ix_tasks_type"), "tasks", ["type"], unique=False)
    op.drop_index(op.f("ix_git_tags_target_commit_sha"), table_name="git_tags")
    op.drop_index(op.f("ix_git_tags_repo_id"), table_name="git_tags")
    op.drop_index(op.f("ix_git_tags_name"), table_name="git_tags")
    op.drop_table("git_tags")
    op.drop_index(
        op.f("ix_git_commit_files_file_blob_sha"), table_name="git_commit_files"
    )
    op.drop_index(op.f("ix_git_commit_files_commit_sha"), table_name="git_commit_files")
    op.drop_table("git_commit_files")
    op.drop_index(op.f("ix_git_branches_repo_id"), table_name="git_branches")
    op.drop_index(op.f("ix_git_branches_name"), table_name="git_branches")
    op.drop_table("git_branches")
    op.drop_index(
        op.f("ix_snippet_v2_files_snippet_sha"), table_name="snippet_v2_files"
    )
    op.drop_index(
        op.f("ix_snippet_v2_files_file_blob_sha"), table_name="snippet_v2_files"
    )
    op.drop_table("snippet_v2_files")
    op.drop_index(op.f("ix_git_commits_repo_id"), table_name="git_commits")
    op.drop_index(op.f("ix_git_commits_author"), table_name="git_commits")
    op.drop_table("git_commits")
    op.drop_index(op.f("ix_enrichments_type"), table_name="enrichments")
    op.drop_index(op.f("ix_enrichments_snippet_sha"), table_name="enrichments")
    op.drop_table("enrichments")
    op.drop_index(op.f("ix_snippets_v2_extension"), table_name="snippets_v2")
    op.drop_table("snippets_v2")
    op.drop_index(op.f("ix_git_repos_sanitized_remote_uri"), table_name="git_repos")
    op.drop_table("git_repos")
    op.drop_index(op.f("ix_git_files_path"), table_name="git_files")
    op.drop_index(op.f("ix_git_files_mime_type"), table_name="git_files")
    op.drop_index(op.f("ix_git_files_extension"), table_name="git_files")
    op.drop_table("git_files")
    op.drop_index(op.f("ix_commit_indexes_status"), table_name="commit_indexes")
    op.drop_index(op.f("ix_commit_indexes_commit_sha"), table_name="commit_indexes")
    op.drop_table("commit_indexes")
    # ### end Alembic commands ###
